@using ReminderTabletAndroid.Models

<div class="start-day-view">
    <div class="greeting-container">
        <h1 class="greeting-title">Rakas √§iti, huomenta!</h1>
        <p class="greeting-subtitle">T√§ss√§ on kuvamuisto p√§iv√§√§si</p>
    </div>

    <div class="daily-photo-container">
        @if (!string.IsNullOrEmpty(ApiResponse?.DailyPhotoUrl))
        {
            <div class="photo-clickable" @onclick="() => OpenImageModal(ApiResponse.DailyPhotoUrl, ApiResponse.DailyPhotoCaption ?? string.Empty)">
                <img src="@ApiResponse.DailyPhotoUrl" alt="@ApiResponse.DailyPhotoCaption" class="daily-photo" />
                <div class="photo-overlay">
                    <span class="zoom-icon">üîç</span>
                    <span class="zoom-text">Suurenna</span>
                </div>
            </div>
            @if (!string.IsNullOrEmpty(ApiResponse.DailyPhotoCaption))
            {
                <p class="photo-caption">@ApiResponse.DailyPhotoCaption</p>
            }
        }
        else
        {
            <div class="photo-placeholder">
                <span class="icon">üåÖ</span>
                <p>P√§iv√§n kuvamuisto</p>
            </div>
        }
    </div>

<ImageModal IsVisible="@showImageModal" 
            ImageSrc="@modalImageSrc" 
            ImageAlt="@modalImageAlt"
            ImageTitle="P√§iv√§n kuvamuisto"
            ImageCaption="@modalImageCaption"
            OnClose="CloseImageModal" />

    <div class="weather-container">
        @if (ApiResponse?.Weather != null)
        {
            <div class="weather-info">
                <span class="weather-icon">@GetWeatherIcon(ApiResponse.Weather.Description)</span>
                <div class="weather-text">
                    <span class="weather-description">@ApiResponse.Weather.Description</span>
                    <span class="weather-temp">@ApiResponse.Weather.Temperature</span>
                </div>
            </div>
        }
        else
        {
            <div class="weather-info">
                <span class="weather-icon">‚òÄÔ∏è</span>
                <div class="weather-text">
                    <span class="weather-description">Kaunis p√§iv√§ edess√§</span>
                    <span class="weather-temp">Nauti!</span>
                </div>
            </div>
        }
    </div>

    <div class="start-day-action">
        <button class="start-day-button" @onclick="() => OnStartDayClicked.InvokeAsync()">
            <span class="play-icon">‚ñ∂Ô∏è</span>
            <span class="button-text">Aloita p√§iv√§</span>
        </button>
    </div>
</div>

@code {
    [Parameter] public ReminderApiResponse? ApiResponse { get; set; }
    [Parameter] public EventCallback OnStartDayClicked { get; set; }

    // Image modal state
    private bool showImageModal = false;
    private string modalImageSrc = "";
    private string modalImageAlt = "";
    private string modalImageCaption = "";

    private void OpenImageModal(string imageSrc, string caption)
    {
        modalImageSrc = imageSrc;
        modalImageAlt = caption;
        modalImageCaption = caption;
        showImageModal = true;
        StateHasChanged();
    }

    private void CloseImageModal()
    {
        showImageModal = false;
        StateHasChanged();
    }

    private string GetWeatherIcon(string? description)
    {
        if (string.IsNullOrEmpty(description)) return "‚òÄÔ∏è";
        
        var desc = description.ToLower();
        if (desc.Contains("aurinko") || desc.Contains("kirkas")) return "‚òÄÔ∏è";
        if (desc.Contains("pilvi")) return "‚òÅÔ∏è";
        if (desc.Contains("sade")) return "üåßÔ∏è";
        if (desc.Contains("lumi")) return "‚ùÑÔ∏è";
        if (desc.Contains("usva") || desc.Contains("sumu")) return "üå´Ô∏è";
        
        return "üå§Ô∏è";
    }
}