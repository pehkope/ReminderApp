@page "/weeklyschedule"
@inject HttpClient Http
@using ReminderTabletNew2.Models
@using System.Text.Json
@inject NavigationManager Navigation

<div class="weekly-schedule">
    <div class="header">
        <h2>üìÖ KOKO VIIKON OHJELMA</h2>
        <button class="back-button" @onclick="GoBack">‚Üê Takaisin</button>
    </div>
    
    <div class="schedule-content">
        @if (apiResponse?.UpcomingAppointments?.Any() == true)
        {
            @foreach (var appointment in apiResponse.UpcomingAppointments)
            {
                <div class="appointment-item">
                    <div class="date">@appointment.Date</div>
                    <div class="time">@appointment.Time</div>
                    <div class="details">
                        <div class="type">@appointment.Type</div>
                        <div class="message">@appointment.Message</div>
                        @if (!string.IsNullOrEmpty(appointment.Location))
                        {
                            <div class="location">üìç @appointment.Location</div>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-appointments">
                <p>Ei tulevaisuuden menoja merkittyn√§.</p>
                <p>Nauti rauhallisesta viikosta! üòä</p>
            </div>
        }
    </div>
</div>

@code {
    private ReminderApiResponse? apiResponse;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            var apiUrl = "https://script.google.com/macros/s/AKfycbwkWcbrLzcryaOAXcS3AqyS6l2KL4DuBk6qShxn2BCUuUcPDhy00rLn7bt66qfRmtRHCQ/exec?clientID=√Ñiti";
            apiResponse = await Http.GetFromJsonAsync<ReminderApiResponse>(apiUrl);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }
} 